{
  "openapi": "3.0.3",
  "info": {
    "title": "Socialie by Ekemini",
    "description": "This is a nodejs mobile application backend API used to communicate with friends, built with Nodejs, Express, MongoDB database, S3 AWS for file storage, and Node mailer for mail communications.\n\nSome useful links:\n- [Socialie Frontend](https://github.com/b4ssey/Socialie)\n- [Socialie Backend](https://github.com/b4ssey/socialie_back)",
    "contact": {
      "email": "mailto@ekemini.tech"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about b4ssey",
    "url": "https://github.com/b4ssey"
  },
  "servers": [
    {
      "url": "https://socialie.herokuapp.com/api"
    }
  ],
  "tags": [
    {
      "name": "post",
      "description": "Everything about your posts"
    },
    {
      "name": "aws",
      "description": "Everything about AWS"
    },
    {
      "name": "user",
      "description": "Operations about user"
    },
    {
      "name": "comment",
      "description": "Operations about comments"
    },
    {
      "name": "like",
      "description": "Operations about likes"
    }
  ],
  "paths": {
    "/posts/single": {
      "post": {
        "tags": ["aws"],
        "summary": "Post to AWS",
        "description": "Posting an image to s3 bucket",
        "operationId": "postImage",
        "requestBody": {
          "description": "Posting an image to AWS",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AWS"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/AWS"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user."
          }
        }
      }
    },
    "/posts/images/{key}": {
      "get": {
        "tags": ["aws"],
        "summary": "Post to AWS",
        "description": "Getting an image to s3 bucket",
        "operationId": "getImage",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "string of image",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "multipart/form-data": {
                "schema": {
                  "$ref": "#/components/schemas/AWS"
                }
              }
            }
          }
        }
      }
    },
    "/post": {
      "post": {
        "tags": ["post"],
        "summary": "Create a post",
        "description": "Creating a post by a specific user",
        "operationId": "createPost",
        "requestBody": {
          "description": "Create a new post by user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Post"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user."
          }
        },
        "security": [
          {
            "petstore_auth": ["write:pets", "read:pets"]
          }
        ]
      }
    },
    "/comments": {
      "post": {
        "tags": ["comment"],
        "summary": "Comment to a post",
        "description": "Comment to a post by a user",
        "operationId": "commentToPost",
        "requestBody": {
          "description": "Create a new post by user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Comment"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          },
          "400": {
            "description": "Invalid post/user."
          }
        }
      }
    },
    "/reactions/like": {
      "post": {
        "tags": ["like"],
        "summary": "Like to a post",
        "description": "Like to a post by a user",
        "operationId": "likePost",
        "requestBody": {
          "description": "Like a post by user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Like"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Like"
                }
              }
            }
          },
          "400": {
            "description": "Invalid post/user."
          }
        }
      }
    },
    "/users/": {
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "Register a new account",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/auth": {
      "get": {
        "tags": ["user"],
        "summary": "Logs user into the system",
        "description": "",
        "operationId": "loginUser",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The email of the registered user",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "The password for login in clear text",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AWS": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "example": "liverpool.png"
          }
        },
        "xml": {
          "name": "aws"
        }
      },
      "Comment": {
        "required": ["caption", "postId", "ownerId'"],
        "type": "object",
        "properties": {
          "caption": {
            "type": "string",
            "example": "Cars Packiu's comment to last mexcool 2nd post"
          },
          "postId": {
            "type": "string",
            "example": "629a1dc7444a31d2e1a21289"
          },
          "ownerId": {
            "type": "string",
            "example": "6298e0420510bcc6513957f4"
          }
        },
        "xml": {
          "name": "comment"
        }
      },
      "Like": {
        "required": ["ownerId", "postId"],
        "type": "object",
        "properties": {
          "ownerId": {
            "type": "string",
            "example": "629889316abb48b53530c445"
          },
          "postId": {
            "type": "string",
            "example": "629889316abb48b53530c440"
          }
        },
        "xml": {
          "name": "like"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Last Mexcool"
          },
          "email": {
            "type": "string",
            "example": "last@mexcool.com"
          },
          "password": {
            "type": "string",
            "example": "Qwerty123"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Post": {
        "required": ["caption", "imageId", "ownerId"],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 10
          },
          "caption": {
            "type": "string",
            "example": "mexcool 1st post"
          },
          "imageId": {
            "type": "string",
            "example": "1654102174283-liverpool.jpg"
          },
          "ownerId": {
            "type": "string",
            "example": "629889316abb48b53530c445"
          }
        },
        "xml": {
          "name": "post"
        }
      }
    },
    "securitySchemes": {
      "petstore_auth": {
        "type": "oauth2",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://petstore3.swagger.io/oauth/authorize",
            "scopes": {
              "write:pets": "modify pets in your account",
              "read:pets": "read your pets"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}
